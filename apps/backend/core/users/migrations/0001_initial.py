# Generated by Django 5.0 on 2024-01-01 00:00:00

from django.db import migrations, models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('superadmin', 'Superadmin'), ('admin', 'Admin'), ('operador', 'Operador'), ('financeiro', 'Financeiro'), ('juridico', 'Jurídico'), ('fiscal', 'Fiscal')], default='operador', max_length=20, verbose_name='Perfil')),
                ('data_inicio_teste', models.DateTimeField(blank=True, null=True, verbose_name='Início do Teste')),
                ('data_fim_teste', models.DateTimeField(blank=True, null=True, verbose_name='Fim do Teste')),
                ('plano_ativo', models.BooleanField(default=False, verbose_name='Plano Ativo')),
                ('data_inicio_plano', models.DateTimeField(blank=True, null=True, verbose_name='Início do Plano')),
                ('data_fim_plano', models.DateTimeField(blank=True, null=True, verbose_name='Fim do Plano')),
                ('stripe_customer_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Stripe Customer ID')),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Stripe Subscription ID')),
                ('mfa_enabled', models.BooleanField(default=False, verbose_name='MFA Ativado')),
                ('mfa_secret', models.CharField(blank=True, max_length=32, null=True, verbose_name='Secret MFA')),
                ('consent_lgpd_at', models.DateTimeField(blank=True, null=True, verbose_name='Consentimento LGPD')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('last_activity', models.DateTimeField(blank=True, null=True, verbose_name='Última Atividade')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stripe_customer_id', models.CharField(max_length=100, unique=True, verbose_name='Stripe Customer ID')),
                ('stripe_subscription_id', models.CharField(max_length=100, unique=True, verbose_name='Stripe Subscription ID')),
                ('stripe_price_id', models.CharField(max_length=100, verbose_name='Stripe Price ID')),
                ('status', models.CharField(choices=[('active', 'Ativa'), ('canceled', 'Cancelada'), ('past_due', 'Pagamento Atrasado'), ('unpaid', 'Não Pago'), ('trialing', 'Em Teste')], default='active', max_length=20, verbose_name='Status')),
                ('current_period_start', models.DateTimeField(verbose_name='Início do Período Atual')),
                ('current_period_end', models.DateTimeField(verbose_name='Fim do Período Atual')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('plan_name', models.CharField(default='Plano Mensal Licitrix', max_length=100, verbose_name='Nome do Plano')),
                ('plan_price', models.DecimalField(decimal_places=2, default=59.9, max_digits=10, verbose_name='Preço do Plano')),
                ('plan_currency', models.CharField(default='BRL', max_length=3, verbose_name='Moeda')),
                ('plan_interval', models.CharField(default='month', max_length=20, verbose_name='Intervalo')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to='core.users.user')),
            ],
            options={
                'verbose_name': 'Assinatura',
                'verbose_name_plural': 'Assinaturas',
                'db_table': 'subscriptions',
            },
        ),
        migrations.CreateModel(
            name='UserAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(max_length=100, verbose_name='Ação')),
                ('model_name', models.CharField(max_length=100, verbose_name='Modelo')),
                ('object_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID do Objeto')),
                ('old_values', models.JSONField(blank=True, null=True, verbose_name='Valores Anteriores')),
                ('new_values', models.JSONField(blank=True, null=True, verbose_name='Valores Novos')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Endereço IP')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='core.users.user')),
            ],
            options={
                'verbose_name': 'Log de Auditoria',
                'verbose_name_plural': 'Logs de Auditoria',
                'db_table': 'user_audit_logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_key', models.CharField(max_length=40, verbose_name='Chave da Sessão')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Endereço IP')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Última Atividade')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='core.users.user')),
            ],
            options={
                'verbose_name': 'Sessão do Usuário',
                'verbose_name_plural': 'Sessões dos Usuários',
                'db_table': 'user_sessions',
            },
        ),
    ]
